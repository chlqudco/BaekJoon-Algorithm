https://school.programmers.co.kr/learn/courses/30/parts/17042


SELECT ID, NAME as SHIP FROM Reservation;
SELECT 문 뒤에 특정 필드 이름을 넣어 해당 필드만 가져올 수도 있습니다. as 문을 활용하여 원래 있던 필드의 이름을 변경할 수도 있습니다. 



WHERE : 조건을 걸어준다.
SELECT * FROM ANIMAL_INS WHERE CONDITION = 'Sick' ORDER BY ANIMAL_ID
여기까지의 과정을 다시 되짚어보자면
ANIMAL_INS 테이블을 불러온다 (FROM)
전체 Column을 선택한다 (SELECT)
그 중 CONDITION이 Sick인 것만 조건을 통과할 수 있다. (WHERE)
오름차순으로 정렬한다 (ORDER BY)



다중정렬: 순서대로 정렬의 우선순위를 의미하며 2가지 이상의 필드를 조합하여 정렬할 수 있다.
ORDER BY NAME, DATE DESC
NAME 순으로 오름차순 정렬, NAME 같을시 DATE 내림차순 정렬



LIMIT: 결과 개수 제한
ORDER BY NAME LIMIT 2
NAME 순으로 오름차순 정렬된 테이블에서 가장 위에서 부터 2개의 레코드 결과만을 가져옴



DISTINCT: 중복 제거
SELECT COUNT(DISTINCT NAME) ...
NAME을 COUNT하되, 중복을 제거하여 COUNT한다.



YEAR, HOUR, MONTH, DAY... : 날짜와 관련된 필드에서 원하는 데이터의 일부를 추출
SELECT HOUR(DATETIME) ...
DATETIME과 날짜와 시간을 모두 포함하는 필드에서 원하는 데이터(년도, 시간, 달, 일, 분, 초 등)을 추출, 위 예시에서는 시간 정보만을 추출하고 있다.



IN/NOT IN: 특정 값이 들어있는 경우/들어있지 않은 경우에만 조회
SELECT ... WHERE NAME IN (SELECT NAME ...)
두번째 서브쿼리의 조건에 해당하는 NAME값이 들어있는 경우에 대해서만 조회



LIKE: 부분 일치를 찾음
WHERE NAME LIKE '%A%'
NAME 컬럼 값이 A가 포함된 경우를 조회
WHERE NAME LIKE 'A%'
NAME 컬럼 값이 A로 시작하는 경우를 조회
WHERE NAME LIKE '%A'
NAME 컬럼 값이 A로 끝나는 경우를 조회



DATE_FORMAT: 날짜, 시간을 지정한 형식으로 출력
SELECT DATE_FORMAT(DATETIME, '%Y-%m-%d') ...
DATETIME을 '2021-SEPTEMBER-1th' 형식으로 출력
%Y %y(년도), %D %d(날짜), %M %m(월), %S(초), %T(hh:mm:ss형태). 대문자,소문자 별로 출력 형식 다름 주의



ABS(): 절대값
SELECT ABS(-100) ...
숫자의 절대값을 구함



CEIL(), FLOOR(), ROUND(): 올림/버림/반올림
SELECT CEIL(10, 1) ... #소수점 첫째자리에서 올림
SELECT FLOOR(10, 1) ... #소수점 첫째자리에서 버림
SELECT ROUND(10, 1) ... #소수점 첫째자리에서 반올림
첫 번째 숫자를 두 번째 숫자가 가리키는 자릿수를 기준으로 올림/버림/반올림



POW(): 제곱
SELECT POW(10, 2) ...
첫 번째 숫자를 두 번째 숫자만큼 제곱



GROUP BY
GROUP BY 절은 동일한 값을 가진 컬럼을 기준으로 그룹별 연산을 적용합니다.
나누고자 하는 그룹의 컬럼명을 GROUP BY 절 뒤에 추가해 주면 됩니다. 
SELECT USER_ID, PRODUCT_ID FROM ONLINE_SALE 
GROUP BY USER_ID, PRODUCT_ID



HAVING
GROUP BY 를 실행한 후 조건문 WHERE 대신 사용한다.
SELECT NAME, COUNT(NAME) COUNT
FROM ANIMAL_INS
GROUP BY NAME
HAVING COUNT(NAME)>1
ORDER BY NAME
NAME을 그룹지었고 HAVING 으로 그에대한 조건을 또 걸어줄 수 있었다.



BETWEEN A AND B
사이의 값을 선택하고 싶을 때 사용한다.
BETWEEN 0 AND 19
이와 같다면 0이상 19 이하의 값을 선택하는 것이다.



IFNULL
NULL 인 것을 찾아서 치환한다.
SELECT IFNULL(NAME,'ABC')
NAME 열에서 NULL이 있다면 그곳을 'ABC' 로 채워넣는다.



IN
포함되는 것 찾기
WHERE NAME IN('A','B','C')
NAME 열에서 A거나 B거나 C인 것을 찾기



AVG
평균 내기



MAX
최댓값 구하기


MIN
최솟값 구하기




기출 문제

======================================


PATIENT 테이블에서 12세 이하인 여자환자의 환자이름, 환자번호, 성별코드, 나이, 전화번호를 조회하는 SQL문을 작성해주세요. 이때 전화번호가 없는 경우, 'NONE'으로 출력시켜 주시고 결과는 나이를 기준으로 내림차순 정렬하고, 나이 같다면 환자이름을 기준으로 오름차순 정렬해주세요.

SELECT PT_NAME, PT_NO, GEND_CD, AGE, IFNULL(TLNO, 'NONE') 
FROM PATIENT 
WHERE AGE <= 12 
AND GEND_CD = 'W' 
ORDER BY AGE DESC, 
PT_NAME


배운것
  - ORDER BY 쓰면 정렬을 할 수 있다. DESC는 내림차순이다
  - IFNULL을 사용하면 널일 경우의 대체값을 지정할 수 있다.

===============


MEMBER_PROFILE 테이블에서 생일이 3월인 여성 회원의 ID, 이름, 성별, 생년월일을 조회하는 SQL문을 작성해주세요. 이때 전화번호가 NULL인 경우는 출력대상에서 제외시켜 주시고, 결과는 회원ID를 기준으로 오름차순 정렬해주세요.


SELECT MEMBER_ID, MEMBER_NAME, GENDER, DATE_FORMAT(DATE_OF_BIRTH, '%Y-%m-%d') AS DATE_OF_BIRTH
FROM MEMBER_PROFILE
WHERE MONTH(DATE_OF_BIRTH) = 3
AND GENDER = 'W'
AND TLNO IS NOT NULL
ORDER BY MEMBER_ID


배운것 
  - MONTH를 통해 달을 가져올 수 있다.
  - DATE_FORMAT을 통해 원하는 형식으로 날짜를 출력할 수 있다
  - IS NOT NULL을 통해 널이 아닌 값만 가져올 수 있다


=================

상반기 아이스크림 총주문량이 3,000보다 높으면서 아이스크림의 주 성분이 과일인 아이스크림의 맛을 총주문량이 큰 순서대로 조회하는 SQL 문을 작성해주세요.

처음으로 테이블이 2개인 문제

SELECT A.FLAVOR
FROM FIRST_HALF A , ICECREAM_INFO B
WHERE A.FLAVOR = B.FLAVOR AND A.TOTAL_ORDER > 3000 AND B.INGREDIENT_TYPE = "fruit_based" 
ORDER BY TOTAL_ORDER DESC


SELECT FLAVOR
FROM FIRST_HALF A JOIN ICECREAM_INFO B
USING (FLAVOR)
WHERE A.TOTAL_ORDER > 3000 AND B.INGREDIENT_TYPE = "fruit_based" 
ORDER BY TOTAL_ORDER DESC


배운 것
  - JOIN을 통해 두 테이블을 합칠 수 있다
  - , 와는 무슨 차이 인지 아직 모르겠다.
  - , 를 쓰면 반드시 A.값 = B.값을 해야 한다. 조인은 걍 합집합이고 ,는 모든 경우를 다 만드나 보다.

=================

CAR_RENTAL_COMPANY_CAR 테이블에서 자동차 종류가 'SUV'인 자동차들의 평균 일일 대여 요금을 출력하는 SQL문을 작성해주세요. 이때 평균 일일 대여 요금은 소수 첫 번째 자리에서 반올림하고, 컬럼명은 AVERAGE_FEE 로 지정해주세요.


SELECT ROUND(AVG(DAILY_FEE)) AS AVERAGE_FEE
FROM CAR_RENTAL_COMPANY_CAR
WHERE CAR_TYPE = "SUV"


배운점
  - 여러 수학 공식이 많다. ROUND도 있고 AVG도 있고


=================

REST_INFO와 REST_REVIEW 테이블에서 서울에 위치한 식당들의 식당 ID, 식당 이름, 음식 종류, 즐겨찾기수, 주소, 리뷰 평균 점수를 조회하는 SQL문을 작성해주세요. 이때 리뷰 평균점수는 소수점 세 번째 자리에서 반올림 해주시고 결과는 평균점수를 기준으로 내림차순 정렬해주시고, 평균점수가 같다면 즐겨찾기수를 기준으로 내림차순 정렬해주세요.

SELECT A.REST_ID, A.REST_NAME, A.FOOD_TYPE, A.FAVORITES, A.ADDRESS, ROUND(AVG(B.REVIEW_SCORE), 2) AS SCORE
FROM REST_INFO A, REST_REVIEW B
WHERE A.REST_ID = B.REST_ID AND A.ADDRESS LIKE "서울%" 
GROUP BY A.REST_ID
ORDER BY SCORE DESC, A.FAVORITES DESC


배운점
  - ,를 쓸 때 A.값 = B.값 잊지 말자
  - LIKE를 통해 적절한 검색을 할 수 있다
  - GROUP BY를 하면 원하는 값끼리 묶을 수 있다

=================




=================




=================




=================


















